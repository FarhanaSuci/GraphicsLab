#include <GL/glut.h>
#include <cmath> // For trigonometric functions

void init() {
    glClearColor(1.0, 1.0, 1.0, 1.0); // Set background to white
    glColor3f(0.0, 0.0, 0.0); // Set drawing color to black
    glLineWidth(2.0); // Set line width
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-250, 250, -150, 250); // Set the coordinate system for better visibility
}

void drawCircle(float cx, float cy, float radius) {
    glBegin(GL_LINE_LOOP);
    for (int i = 0; i <= 100; i++) {
        float angle = 2.0f * 3.1415926f * i / 100;
        float x = radius * cos(angle);
        float y = radius * sin(angle);
        glVertex2f(x + cx, y + cy);
    }
    glEnd();
}

void drawShaheedMinar() {
    glBegin(GL_LINES);

    // Base platform
    glVertex2f(-180, -100);
    glVertex2f(180, -100);

    // Left outer rectangle
    glVertex2f(-140, -100);
    glVertex2f(-140, 50);
    glVertex2f(-120, -100);
    glVertex2f(-120, 50);
    glVertex2f(-140, 50);
    glVertex2f(-120, 50);

    // Right outer rectangle
    glVertex2f(140, -100);
    glVertex2f(140, 50);
    glVertex2f(120, -100);
    glVertex2f(120, 50);
    glVertex2f(140, 50);
    glVertex2f(120, 50);

    // Inner left rectangle
    glVertex2f(-80, -100);
    glVertex2f(-80, 120);
    glVertex2f(-60, -100);
    glVertex2f(-60, 120);
    glVertex2f(-80, 120);
    glVertex2f(-60, 120);

    // Inner right rectangle
    glVertex2f(80, -100);
    glVertex2f(80, 120);
    glVertex2f(60, -100);
    glVertex2f(60, 120);
    glVertex2f(80, 120);
    glVertex2f(60, 120);

    // Central tall rectangle
    glVertex2f(-30, -100);
    glVertex2f(-30, 200);
    glVertex2f(30, -100);
    glVertex2f(30, 200);
    glVertex2f(-30, 200);
    glVertex2f(30, 200);

    glEnd();

    // Draw the circle in the background
    drawCircle(0.0, 60.0, 70.0);
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    drawShaheedMinar();
    glFlush();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(600, 600);
    glutCreateWindow("Shaheed Minar Representation");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
