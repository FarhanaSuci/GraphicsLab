#include <GL/glut.h>
#include <cmath> // For trigonometric functions

void init() {
    glClearColor(1.0, 1.0, 1.0, 1.0); // Set background to white
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-1.0, 1.0, -1.0, 1.0); // Set the coordinate system to normalized device coordinates
}

void drawCircle(float cx, float cy, float radius) {
    glBegin(GL_TRIANGLE_FAN);
    glVertex2f(cx, cy); // Center of circle
    for (int i = 0; i <= 100; i++) {
        float angle = 2.0f * 3.1416f * i / 100;
        float x = radius * cos(angle);
        float y = radius * sin(angle);
        glVertex2f(x + cx, y + cy);
    }
    glEnd();
}

void drawShaheedMinar() {
    // Draw filled base platform
    glColor3f(0.7, 0.7, 0.7); // Light gray color for the base
    glBegin(GL_QUADS);
    glVertex2f(-0.7, -0.8);
    glVertex2f(0.7, -0.8);
    glVertex2f(0.7, -0.75);
    glVertex2f(-0.7, -0.75);
    glEnd();

    // Left outer rectangle
    glColor3f(0.5, 0.5, 0.5); // Darker gray
    glBegin(GL_QUADS);
    glVertex2f(-0.6, -0.8);
    glVertex2f(-0.55, -0.8);
    glVertex2f(-0.55, -0.2);
    glVertex2f(-0.6, -0.2);
    glEnd();

    // Right outer rectangle
    glBegin(GL_QUADS);
    glVertex2f(0.6, -0.8);
    glVertex2f(0.55, -0.8);
    glVertex2f(0.55, -0.2);
    glVertex2f(0.6, -0.2);
    glEnd();

    // Inner left rectangle
    glBegin(GL_QUADS);
    glVertex2f(-0.3, -0.8);
    glVertex2f(-0.25, -0.8);
    glVertex2f(-0.25, 0.2);
    glVertex2f(-0.3, 0.2);
    glEnd();

    // Inner right rectangle
    glBegin(GL_QUADS);
    glVertex2f(0.3, -0.8);
    glVertex2f(0.25, -0.8);
    glVertex2f(0.25, 0.2);
    glVertex2f(0.3, 0.2);
    glEnd();

    // Central tall rectangle
    glColor3f(0.3, 0.3, 0.3); // Darkest gray for central rectangle
    glBegin(GL_QUADS);
    glVertex2f(-0.1, -0.8);
    glVertex2f(0.1, -0.8);
    glVertex2f(0.1, 0.8);
    glVertex2f(-0.1, 0.8);
    glEnd();

    // Draw the filled circle in the background (normalized position and radius)
    glColor3f(1.0, 0.0, 0.0); // Red color for the circle
    drawCircle(0.0, 0.0, 0.3);
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    drawShaheedMinar();
    glFlush();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(600, 600);
    glutCreateWindow("Shaheed Minar Representation (Filled)");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
